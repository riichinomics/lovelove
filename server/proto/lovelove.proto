syntax = "proto3";
package lovelove;

enum Hana {
	UnknownSeason = 0;
	Ayame = 1;
	Botan = 2;
	Fuji = 3;
	Hagi = 4;
	Kiku = 5;
	Kiri = 6;
	Matsu = 7;
	Momiji = 8;
	Sakura = 9;
	Susuki = 10;
	Ume = 11;
	Yanagi = 12;
}

enum Variation {
	UnknownVariation = 0;
	First = 1;
	Second = 2;
	Third = 3;
	Fourth = 4;
}

enum GenericResponseCode {
	Error = 0;
	Ok = 1;
}

enum PlayerPosition {
	UnknownPosition = 0;
	Red = 1;
	White = 2;
}

enum PlayerCentricZone {
	UnknownZone = 0;
	Table = 1;
	Hand = 2;
	OpponentHand = 3;
	Deck = 4;
	Collection = 5;
	OpponentCollection = 6;
	Drawn = 7;
}


enum MessageType {
	Transact = 0;
	Broadcast = 1;
}

service LoveLove {
	rpc Authenticate (AuthenticateRequest) returns (AuthenticateResponse) {}

	rpc ConnectToGame (ConnectToGameRequest) returns (ConnectToGameResponse) {}

	rpc PlayHandCard (PlayHandCardRequest) returns (PlayHandCardResponse) {}

	rpc PlayDrawnCard (PlayDrawnCardRequest) returns (PlayDrawnCardResponse) {}
}

message Wrapper {
	MessageType type = 1;
	int32 sequence = 2;
	string contentType = 3;
	bytes data = 4;
}

message ConnectToGameRequest {
	string roomId = 1;
}

message ConnectToGameResponse {
	PlayerPosition position = 1;
	CompleteGameState gameState = 2;
}

message Card {
	int32 id = 1;
	Hana hana = 2;
	Variation variation = 3;
}

message PlayOptions {
	repeated int32 options = 1;
}

message ZonePlayOptions {
	repeated PlayerCentricZone acceptedOriginZones = 1;
	PlayOptions noTargetPlayOptions = 2;
	map<int32, PlayOptions> playOptions = 3;
}

message CompleteGameState {
	int32 deck = 1;
	Card deckFlipCard = 2;
	repeated Card table = 3;
	repeated Card hand = 4;
	repeated Card collection = 5;
	int32 opponentHand = 6;
	repeated Card opponentCollection = 7;
	PlayerPosition oya = 8;
	PlayerPosition active = 9;
	ZonePlayOptions tablePlayOptions = 10;
}

message AuthenticateRequest {
	string userId = 1;
}

message AuthenticateResponse {
}

message CardId {
	int32 cardId = 1;
}

message PlayHandCardRequest {
	CardId handCard = 1;
	CardId tableCard = 2;
}

message PlayHandCardResponse {
	GenericResponseCode status = 1;
}

message PlayDrawnCardRequest {
	CardId tableCard = 2;
}

message PlayDrawnCardResponse {
	GenericResponseCode status = 1;
}

message CardSlot {
	PlayerCentricZone zone = 1;
	int32 index = 2;
}

message CardMoveUpdate {
	Card movedCard = 1;
	CardSlot originSlot = 2;
	CardSlot destinationSlot = 3;
}

message GameStateUpdatePart {
	repeated CardMoveUpdate cardMoveUpdates = 1;
	ActivePlayerUpdate activePlayerUpdate = 2;
	PlayOptionsUpdate playOptionsUpdate = 3;

}

message ActivePlayerUpdate {
	PlayerPosition position = 1;
}

message PlayOption {
	CardId targetCardId = 1;
	CardId originCardId = 2;
}

message PlayOptionsUpdate {
	repeated PlayerCentricZone originZones = 1;
	repeated PlayOption defunctOptions = 2;
	repeated PlayOption newOptions = 3;
}

message GameStateUpdate {
	repeated GameStateUpdatePart updates = 1;
}
